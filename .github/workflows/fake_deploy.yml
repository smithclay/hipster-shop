name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ secrets.SMITHCLAY_PAT }}
          target_url: http://my-app-url.com
          environment: production
          ref: ${{ github.ref }}

      - name: Deploy my app
        run: |
          echo This is a fake deploy process.

      # - name: Take Lightstep Snapshot
      #   id: lightstep-snapshot
      #   uses: lightstep/lightstep-action-snapshot@master
      #   if: success()
      #   with:
      #     lightstep_api_key: ${{ secrets.LIGHTSTEP_API_TOKEN }}
      #     lightstep_organization: LightStep
      #     lightstep_project: demo
      #     lightstep_snapshot_query: '"service.version" IN ("${{ github.ref }}")'

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.SMITHCLAY_PAT }}
          target_url: http://my-app-url.com
          state: "success"
          # This is a hack to persist the snapshot id in deployment status
          # description: 'lightstep.snapshot_id.${{ steps.lightstep-snapshot.outputs.lightstep_snapshot_id }}'
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.SMITHCLAY_PAT }}
          target_url: http://my-app-url.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}